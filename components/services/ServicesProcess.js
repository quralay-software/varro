import React, { useState } from 'react';
import { motion } from 'framer-motion';

const processSteps = [
    {
        id: 1,
        icon: 'üîç',
        title: '–ê–Ω–∞–ª–∏–∑ –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–π',
        description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π —Ä–∞–∑–≤–µ–¥–∫–∏.',
        details: [
            '–ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞',
            '–û—Ü–µ–Ω–∫–∞ –∑–∞–ø–∞—Å–æ–≤',
            '–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤'
        ]
    },
    {
        id: 2,
        icon: '‚õèÔ∏è',
        title: '–†–∞–∑–≤–µ–¥–∫–∞ –∏ –¥–æ–±—ã—á–∞',
        description: '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–æ–±—ã—á–∏ —Å —É—á–µ—Ç–æ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏—è.',
        details: [
            '–ë—É—Ä–µ–Ω–∏–µ —Å–∫–≤–∞–∂–∏–Ω',
            '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–æ–±—ã—á–∏',
            '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤'
        ]
    },
    {
        id: 3,
        icon: '‚ö°',
        title: '–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ',
        description: '–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ —Å—ã—Ä—å—è –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –ë–ì–ü–ó —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –≤—Å–µ—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤.',
        details: [
            '–û—á–∏—Å—Ç–∫–∞ –≥–∞–∑–∞',
            '–§—Ä–∞–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
            '–•—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–∏'
        ]
    },
    {
        id: 4,
        icon: 'üö¢',
        title: '–õ–æ–≥–∏—Å—Ç–∏–∫–∞ –∏ –ø–æ—Å—Ç–∞–≤–∫–∏',
        description: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è–º.',
        details: [
            '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞',
            '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤',
            '–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞'
        ]
    },
    {
        id: 5,
        icon: 'üîÑ',
        title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è',
        description: '–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö.',
        details: [
            '–¢–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
            '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è',
            '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'
        ]
    }
];

const ProcessStep = ({ step, isActive, onClick }) => {
    return (
        <motion.div
            className={`relative cursor-pointer ${isActive ? 'lg:col-span-2' : ''}`}
            whileHover={{ scale: 1.02 }}
            onClick={onClick}
        >
            {/* Connection Line */}
            <div className="hidden lg:block absolute top-1/2 left-full w-full h-0.5 bg-primary/30 -translate-y-1/2" />
            
            {/* Step Content */}
            <div className={`bg-white rounded-lg shadow-lg p-6 relative z-10
                           transition-all duration-300 ${isActive ? 'ring-2 ring-primary' : 'hover:shadow-xl'}`}>
                <div className="text-4xl mb-4">{step.icon}</div>
                <h3 className="text-xl font-bold mb-3">{step.title}</h3>
                <p className="text-gray-600 mb-4">{step.description}</p>
                
                {isActive && (
                    <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: 'auto' }}
                        exit={{ opacity: 0, height: 0 }}
                    >
                        <ul className="space-y-2">
                            {step.details.map((detail, index) => (
                                <motion.li
                                    key={index}
                                    initial={{ opacity: 0, x: -20 }}
                                    animate={{ opacity: 1, x: 0 }}
                                    transition={{ delay: index * 0.1 }}
                                    className="flex items-center text-gray-600"
                                >
                                    <span className="text-primary mr-2">‚Ä¢</span>
                                    {detail}
                                </motion.li>
                            ))}
                        </ul>
                    </motion.div>
                )}
            </div>
        </motion.div>
    );
};

const ServicesProcess = () => {
    const [activeStep, setActiveStep] = useState(null);

    return (
        <section className="section-padding">
            <div className="container mx-auto">
                <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6 }}
                    className="text-center mb-12"
                >
                    <span className="text-primary">–ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã</span>
                    <h2 className="text-4xl font-bold mt-2">–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º</h2>
                    <p className="text-gray-600 mt-4 max-w-2xl mx-auto">
                        –ù–∞—à –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, 
                        –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.
                    </p>
                </motion.div>

                <div className="grid grid-cols-1 lg:grid-cols-5 gap-6">
                    {processSteps.map((step) => (
                        <ProcessStep
                            key={step.id}
                            step={step}
                            isActive={activeStep === step.id}
                            onClick={() => setActiveStep(activeStep === step.id ? null : step.id)}
                        />
                    ))}
                </div>
            </div>
        </section>
    );
};

export default ServicesProcess;
